name: Python CI

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'  # Match all version tags
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.gitignore'
  pull_request:
    branches: [ main, master ]
    paths:
      - '**.py'
      - 'pyproject.toml'
      - '.github/workflows/python-ci.yml'

jobs:
  lint:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ".[dev]"
        pip install ruff
        
    - name: Run Ruff code check
      run: |
        python -m ruff check .
        
    - name: Run Ruff format check
      run: |
        python -m ruff format --check .
  
  typecheck:
    name: Type Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ".[dev]"
        
    - name: Run Mypy type check
      run: |
        python -m mypy mcp_factory
  
  test:
    name: Test and Coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ".[dev]"
        
    - name: Run tests and generate coverage report
      run: |
        python -m pytest --cov=mcp_factory tests/ --cov-report=xml
        
    - name: Upload coverage report to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        fail_ci_if_error: false

  # Optional: Add build and publish workflow
  build:
    name: Build distribution package
    needs: [lint, typecheck, test]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build wheel
        
    - name: Build package
      run: |
        python -m build
        
    - name: Store build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  # Publish workflow has been moved to python-publish.yml 